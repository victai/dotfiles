# example: /usr/share/doc/tmux/examples/
# {{{ screen-keys.conf
# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix C-a
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
# unbind ^X
# bind ^X lock-server
# unbind x
# bind x lock-server

# screen ^C c
bind c new-window

# detach ^D d
unbind C-d
bind C-d detach

# displays *
#unbind C-*
#bind C-* list-clients

unbind C-a
bind C-a last-window

unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# split -v |
unbind |
bind | split-window -h

bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window
# }}}
# {{{ vim-keys.conf
# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
# }}}

# General Settings
set -s default-terminal tmux-256color
set -g default-terminal "screen-256color" # + "tmux -2" => 256 color
set -g status-justify left
set -g status-interval 15 # 15 sec refresh
set -g display-time 3000
set -g status-bg black
set -g status-fg white
set -g mode-style fg=blue,bg=yellow
set -g status-left-length 15
set -g status-right-length 55
# set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |" # 0:bash
set -g status-left "#[fg=white,bg=blue] > #S < #[default] |" # session-name
set -g status-right "#[fg=red,bright][ #[fg=cyan]#H #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright](load: #(cat /proc/loadavg | cut -d \" \" -f 1,2,3))#[default]"

# Copy Mode Bindings
# Updated for newer tmux versions

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Mouse and Pane Selection
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

##############################################
## Toggle mouse to avoid copy/paste problem ##
## Uncomment 8 lines for tmux < 2.1 version ##
##############################################

# Toggle mouse on
set -g mouse on
bind m set -g mouse on
# set -g mode-mouse on \;\
# set -g mouse-resize-pane on \;\
# set -g mouse-select-pane on \;\
# set -g mouse-select-window on \;\
display 'Mouse: ON'

# Toggle mouse off
bind M set -g mouse off
# set -g mode-mouse off \;\
# set -g mouse-resize-pane off \;\
# set -g mouse-select-pane off \;\
# set -g mouse-select-window off \;\
display 'Mouse: OFF'

# Swap Windows
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1
